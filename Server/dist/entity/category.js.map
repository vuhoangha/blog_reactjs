{"version":3,"sources":["../../src/entity/category.js"],"names":["module","exports","data","catId","quantityPost","catName","fields","field","isExistProperty","keyObject","keys","key"],"mappings":";AACA;;AAEA;;;;AAEA;;;;;;;;AAEAA,OAAOC,OAAP;;AAEI;AACA,sBAAYC,IAAZ,EAAkB;AAAA;;AACd;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,OAAL,GAAe,EAAf;;AAEA,YAAI,CAACH,IAAL,EAAW;AANG;AAAA;AAAA;;AAAA;AAOd,iCAAoB,KAAKI,MAAL,EAApB,8HAAmC;AAAA,oBAAxBC,KAAwB;;AAC/B,oBAAI,eAAKC,eAAL,CAAqBN,IAArB,EAA2BK,KAA3B,CAAJ,EAAuC,KAAKA,KAAL,IAAcL,KAAKK,KAAL,CAAd;AAC1C;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUjB;;AAED;;;AAfJ;AAAA;AAAA,+BAgBW;AACH,mBAAO,CACH,OADG,CAAP;AAGH;;AAED;;AAtBJ;AAAA;AAAA,iCAuBa;AACL,mBAAO,CACH,OADG,EAEH,cAFG,EAGH,SAHG,CAAP;AAKH;;AAED;;AA/BJ;AAAA;AAAA,wCAgCoB;AACZ,mBAAO,UAAP;AACH;;AAED;;AApCJ;AAAA;AAAA,iCAqCa;AACL,gBAAME,YAAY,EAAlB;AADK;AAAA;AAAA;;AAAA;AAEL,sCAAkB,KAAKC,IAAL,EAAlB,mIAA+B;AAAA,wBAApBC,GAAoB;;AAC3BF,8BAAUE,GAAV,IAAiB,KAAKA,GAAL,CAAjB;AACH;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKL,mBAAOF,SAAP;AACH;AA3CL;;AAAA;AAAA","file":"category.js","sourcesContent":["\r\n/*eslint linebreak-style: [\"error\", \"windows\"]*/\r\n\r\n'use strict';\r\n\r\nimport util from '../util';\r\n\r\nmodule.exports = class category {\r\n\r\n    //constructor\r\n    constructor(data) {\r\n        //all field\r\n        this.catId = 0;\r\n        this.quantityPost = 0;\r\n        this.catName = '';\r\n\r\n        if (!data) return;\r\n        for (const field of this.fields()) {\r\n            if (util.isExistProperty(data, field)) this[field] = data[field];\r\n        }\r\n    }\r\n\r\n    //key of entity\r\n    keys() {\r\n        return [\r\n            'catId'\r\n        ];\r\n    }\r\n\r\n    //field\r\n    fields() {\r\n        return [\r\n            'catId',\r\n            'quantityPost',\r\n            'catName'\r\n        ];\r\n    }\r\n\r\n    //entity name\r\n    getEntityName() {\r\n        return 'category';\r\n    }\r\n\r\n    //custom function\r\n    getKey() {\r\n        const keyObject = {};\r\n        for (const key of this.keys()) {\r\n            keyObject[key] = this[key];\r\n        }\r\n        return keyObject;\r\n    }\r\n\r\n};\r\n"]}